/* 
 * # 2089 : -2진수
 * - 문제
 * -2진법은 부호 없는 2진수로 표현이 된다. 2진법에서는 20, 21, 22, 23이 표현 되지만 
 * -2진법에서는 (-2)0 = 1, (-2)1 = -2, (-2)2 = 4, (-2)3 = -8을 표현한다. 10진수로 1부터 표현하자면 
 * 1, 110, 111, 100, 101, 11010, 11011, 11000, 11001 등이다.
 * 10진법의 수를 입력 받아서 -2진수를 출력하는 프로그램을 작성하시오.
 * 
 * - 입력
 * 첫 줄에 10진법으로 표현된 수 N(-2,000,000,000≤N≤2,000,000,000)이 주어진다.
 * 
 * - 출력
 * -2진법 수를 출력한다.
 *  
 * *********************************************************************************
 * 
 * # writeup
 * - 분석

1 1 	(-2)^0 
2 110	(-2)^2 * 1 + (-2)^1 * 1 + (-2)^0 * 0 = 4 -2
3 111	(-2)^2 * 1 + (-2)^1 * 1 + (-2)^0 * 1 = 4 -2 1
4 100	(-2)^2 * 1 + (-2)^1 * 0 + (-2)^0 * 0 = 4
5 101	(-2)^2 * 1 + (-2)^1 * 0 + (-2)^0 * 1 = 4 -2 1
6 11010	(-2)^4 * 1 + (-2)^3 * 1 + (-2)^2 * 0 + (-2)^2 * 1 + (-2)^1 * 1 + (-2)^0 * 1 = 16 -8 -2


 * 
 * - 생각
 * 
 * 
 * SOLVE 1> 
 * 
 * 
*/

// Solve 1
#include <bits/stdc++.h>
using namespace std;

void solve(int n);

int main()
{
    ios_base::sync_with_stdio( false ), cin.tie( NULL );
    int n; cin >> n;

    if(n==0){
        cout << 0;
        return 0;
    } 
    else {
        solve(n);
    }
    
}

void solve(int n)
{
    if(n == 0) return;

    if(n%2){
        if(n>0){
            solve(n/-2);
        }
        else{
            solve((n-1) / -2);
        }
        cout << 1;
    }
    else{
        solve(-(n/2));
        cout << 0;
    }
}